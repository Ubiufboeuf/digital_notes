---
import MateriaAside from "@components/MateriaAside";
import { lista as listaMateriasAside } from "@/lib/listaMateriasInicio";
import ordenador from "@/lib/ordenador"
import tailwindConfig from "tailwind.config.mjs"
import { listaMaterias } from "@/lib/listaDeListas";

interface Props {
	title: string;
}

const { title } = Astro.props;

const materiasOrdenadas = ordenador(listaMateriasAside, "materias")


const temas = ordenador(tailwindConfig.daisyui.themes)

---

<!doctype html>
<html data-theme="luxury" lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} - Notes</title>
	</head>
	<body id="root">
		<header>
			<nav class="navbar bg-base-200">
				<!-- Botón abrir menú -->
				<div class="flex-none">
					<button id="menu-btn" class="btn btn-square btn-ghost md:hidden">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
							class="inline-block h-5 w-5 stroke-current">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M4 6h16M4 12h16M4 18h16"></path>
						</svg>
					</button>
				</div>
				<!-- Logo proyecto + enlace inicio -->
				<div class="flex-1">
					<a href="/" class="btn btn-ghost text-xl">DigitalNotes</a>
				</div>
				<div class="nolist dropdown dropdown-bottom dropdown-end">
					<div tabindex="0" role="button" class="btn btn-ghost rounded-btn">
						Temas
						<svg
							width="12px"
							height="12px"
							class="inline-block h-2 w-2 fill-current opacity-60"
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 0 2048 2048">
							<path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path>
						</svg>
					</div>
					<ul tabindex="0" class="h-96 overflow-y-auto dropdown-content bg-base-300 rounded-box z-[1] w-52 p-2 shadow-2xl">
						<li>
							<input
								type="radio"
								name="theme-dropdown"
								class="theme-controller btn btn-sm btn-block btn-ghost justify-start"
								aria-label="Predeterminado"
								value="default"
								checked />
						</li>
						{
							temas.map((tema) => {
								const nombreTema = tema.value[0].toUpperCase() + tema.value.substr(1, tema.value.length)
								return (
								<li>
									<input
										type="radio"
										name="theme-dropdown"
										class="theme-controller btn btn-sm btn-block btn-ghost justify-start"
										aria-label={nombreTema}
										value={tema.value} />
								</li>
								)
							})
						}
					</ul>
				</div>
				<!-- Botón 3 puntos -->
				<div class="flex-none">
					<!-- Open the modal using ID.showModal() method -->
					<button class="btn btn-ghost" onclick="my_modal_2.showModal()">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
						>
							<path stroke="none" d="M0 0h24v24H0z" fill="none"/>
							<path d="M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
							<path d="M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
							<path d="M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
						</svg>
					</button>
					<dialog id="my_modal_2" class="modal">
						<div class="modal-box w-auto max-w-screen-md">
							<h3 class="text-lg font-bold">¿Qué quieres hacer?</h3>
							<p class="py-4">Puedes añadir una nueva materia, una clase, o editarlas.</p>
							<div class="modal-action">
								<form
									method="dialog"
									class="grid place-items-center w-full gap-2 max-w-[calc(108px*4)] mx-auto"
									style={{"grid-template-columns": "repeat(auto-fill, minmax(100px, 1fr))"}}
								>
									<a href="/zconfig/addMateria" role="button" class="btn btn-block">Añadir Materia</a>
									<a href="/zconfig/editMateria" role="button" class="btn btn-block">Editar Materia</a>
									<a href="/zconfig/addClass" role="button" class="btn btn-block">Añadir Clase</a>
									<a href="/zconfig/editClass" role="button" class="btn btn-block">Editar Clase</a>
								</form>
							</div>
						</div>
						<form method="dialog" class="modal-backdrop">
							<button>close</button>
						</form>
					</dialog>
				</div>
			</nav>
		</header>
		<main-wrapper id="main-wrapper" class="grid">
			<aside id="aside" class="bg-base-100 relative max-w-full h-screen flex justify-center items-center flex-col">
				<ul class="menu h-full min-h-fit w-full max-w-full overflow-y-auto flex-nowrap">
					{
						materiasOrdenadas.map((materia) => {
							console.log("layout: ", materia)
							return <MateriaAside materia={listaMateriasAside[materia.idx]} />
						})
					}
				</ul>
			</aside>
			<slot />
		</main-wrapper>
	</body>
</html>
<script>
	const menu_btn = document.querySelector("#menu-btn")
	menu_btn.addEventListener("click", () => {
		document.querySelector("#aside").classList.toggle("opened")
	})
</script>
<style is:global>
	@font-face {
		font-family: Inter;
		src: url("/Inter.ttf");
	}
	
	@font-face {
		font-family: Poppins;
		src: url("/Poppins.ttf");
	}

	@font-face {
		font-family: NotoSans;
		src: url("/NotoSans.ttf");
	}

	@font-face {
		font-family: CascadiaCode;
		src: url("/CascadiaCode.ttf");
	}

	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}

	html {
		font-family: system-ui, sans-serif;
		background: #13151a;
		background-size: 224px;
		width: 100vw;
		/* scrollbar-width: none; */
	}

	code {
		font-family:
			CascadiaCode,
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

	*:not(code, pre) {
		font-family: Inter, Poppins, NotoSans, system-ui, Arial, sans-serif;
	}

	body {
		max-height: 100vh;
		overflow-y: hidden;
	}

	body #main-wrapper {
		grid-template-columns: min(100%, 300px) 1fr;
		height: 100%;
		width: 100%;
	}

	body #main-wrapper > * {
		max-height: calc(100% - 64px);
	}

	body #aside {
		transition: left .2s ease;
		z-index: 9999;
	}

	body #aside > ul {
		scrollbar-gutter: stable;
	}

	body #main-wrapper > main {
		height: 100vh;
		padding: 32px 32px 128px;
		/* padding: 32px 0 128px; */
		overflow-y: auto;
		scrollbar-gutter: stable;
	}
</style>

<style is:global>
	ol > li {
		list-style: decimal;
	}

	ul > li {
		list-style: disc;
	}

	.nolist, .nolist * {
		list-style: none;
	}

	code-mini {
		background: rgb(32 32 32);
		font-size: 15px;
		margin: 2px;
		width: fit-content;
		padding: 2px 8px;
		border-radius: 4px;
	}

	pre {
		width: fit-content;
		margin: 2px;
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 4px;
	}

	.opened {
		left: 0 !important;
	}

	.date {
		margin: 0 0 16px;
	}

	.sub {
		font-weight: 600;
		text-decoration: underline;
	}

	.text-sep8 {
		display: flex;
		flex-direction: column;
		gap: 8px;
	}

	.title-sub {
		font-size: 22px;
		font-weight: 500;
		margin-bottom: 18px;
		text-decoration: underline;
		text-underline-offset: 8px;
	}
		
	.title4 {
		font-size: 19px;
		font-weight: 500;
		margin: 0px;
		text-underline-offset: 6px;
	}
		
	.title3 {
		font-size: 22px;
		font-weight: 500;
		margin-bottom: 18px;
		text-underline-offset: 8px;
	}

	.title2 {
		font-size: 27px;
		line-height: 32px;
		font-weight: 600;
		margin-bottom: 26px;
		text-align: center;
	}

	.title {
		font-size: 30px;
		line-height: 36px;
		font-weight: 700;
		margin-bottom: 32px;
		text-align: center;
	}
</style>
<style is:global>
	@media (width < 768px) {
		#main-wrapper {
			display: flex;
		}
		#main-wrapper > #menu-btn {
			display: flex;
		}
		#main-wrapper > main {
			width: 100%;
		}
		#aside {
			position: absolute;
			padding-top: 49px;
			left: -300px;
			z-index: 9999;
			width: 300px;
			max-height: calc(100vh - 64px);
		}
		#breadcrumb-wrapper {
			margin-top: 16px;
			margin-bottom: 16px;
		}
	}
</style>

<!-- <style is:global>
	@media (width <= 450px) {
		#main-wrapper {
			background: red;
		}
	}
</style> -->